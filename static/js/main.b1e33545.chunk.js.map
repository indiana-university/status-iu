{"version":3,"sources":["pages/Calendar.js","status-api.js","pages/Home.js","pages/Maintenance.js","pages/Notice.js","pages/Notices.js","App.js","index.js"],"names":["Calendar","_Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","error","isLoaded","notices","inherits","createClass","key","value","_this2","fetch","then","res","json","result","setState","react_default","a","createElement","Fragment","components","variant","cells","map","notice","id","name","content","Component","baseUrl","makeAPICall","context","endpoint","stateName","defineProperty","Home","serviceGroups","noticeType","Link","to","concat","width","className","title","service","description","Maintenance","Notice","noticeId","match","params","md","services","lastActivityOn","changeStart","publishedOn","changeEnd","Notices","App","BrowserRouter","basename","process","Route","exact","path","component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.b1e33545.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport 'rivet-uits/css/rivet.css'\nimport { Table } from 'rivet-react'\n\nexport class Calendar extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      notices: []\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://api.status-test.uits.iu.edu/Notices\")\n      .then(res => res.json())\n      .then(\n        (result) => {\n          this.setState({\n            isLoaded: true,\n            notices: result\n          });\n        },\n        // Note: it's important to handle errors here\n        // instead of a catch() block so that we don't swallow\n        // exceptions from actual bugs in components.\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            error\n          });\n        }\n      )\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <Table variant=\"stripes\" cells>\n          <thead>\n          <tr>\n            <th>Greeting</th>\n            <th>Audience</th>\n          </tr>\n          </thead>\n          <tbody>\n          {this.state.notices.map((notice) =>\n            <tr key={notice.id}>\n              <td>{notice.name}</td>\n              <td>{notice.content}</td>\n            </tr>\n          )}\n          </tbody>\n        </Table>\n      </React.Fragment>\n    );\n  }\n}\n\n\n","const baseUrl='https://api.status-test.uits.iu.edu'\n\nfunction makeAPICall(context, endpoint, stateName) {\n  return fetch(baseUrl + endpoint)\n    .then(res => res.json())\n    .then(\n      (result) => {\n        context.setState({\n          [stateName]: result\n        });\n      },\n      // Note: it's important to handle errors here\n      // instead of a catch() block so that we don't swallow\n      // exceptions from actual bugs in components.\n      (error) => {\n        context.setState({\n          [stateName]: error\n        });\n      }\n    )\n}\n\nexport function notices(context) {\n  makeAPICall(context, '/Notices', 'notices')\n}\n\n\nexport function serviceGroups(context) {\n  makeAPICall(context, '/servicegroups', 'serviceGroups')\n}\n\nexport function services(context) {\n  makeAPICall(context, '/services', 'services')\n}\n\nexport function service(context, id) {\n  makeAPICall(context, '/services/' + id, 'service')\n}\n\nexport function campuses(context, id) {\n  makeAPICall(context, '/campuses', 'campuses')\n}\n\nexport function maintenanceWindows(context, id) {\n  makeAPICall(context, '/maintenancewindows', 'maintenanceWindows')\n}\n\n\n\n","import React, { Component } from 'react';\nimport 'rivet-uits/css/rivet.css'\nimport { Table } from 'rivet-react'\nimport { Link } from 'react-router-dom'\nimport { notices, serviceGroups } from '../status-api'\n\nexport class Home extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      notices: [],\n      serviceGroups: []\n    };\n  }\n\n  componentDidMount() {\n    notices(this)\n    serviceGroups(this)\n  }\n\n  render() {\n    return (\n        <React.Fragment>\n\n          <h2>Alerts</h2>\n          {this.state.notices.map((notice) =>\n            notice.noticeType === 'Alert' && <li>\n              <Link to={`/notices/${notice.id}`}>{notice.name}</Link>\n            </li>\n          )}\n          <h2>Maintenance notices</h2>\n          {this.state.notices.map((notice) =>\n            notice.noticeType === 'Maintenance' && <li>\n              <Link to={`/notices/${notice.id}`}>{notice.name}</Link>\n            </li>\n          )}\n\n          <h2>Information notices</h2>\n          {this.state.notices.map((notice) =>\n            notice.noticeType === 'Information' && <li>\n              <Link to={`/notices/${notice.id}`}>{notice.name}</Link>\n            </li>\n          )}\n\n          <Table variant=\"stripes\" cells>\n            <thead>\n            <tr>\n              <tr>\n                <th width=\"350\" className=\"u-text-left u-bold\">Service category</th>\n                <th className=\"status-matrix__campus\">\n                  <abbr title=\"Bloomington\">IUB</abbr>\n                </th>\n                <th className=\"status-matrix__campus\">\n                  <abbr title=\"Indianapolis\">IUPUI</abbr>\n                </th>\n                <th className=\"status-matrix__campus\">\n                  <abbr title=\"Columbus\">IUPUC</abbr>\n                </th>\n                <th className=\"status-matrix__campus\">\n                  <abbr title=\"Richmond\">IUE</abbr>\n                </th>\n                <th className=\"status-matrix__campus\">\n                  <abbr title=\"Fort Wayne\">IUFW</abbr>\n                </th>\n                <th className=\"status-matrix__campus\">\n                  <abbr title=\"Kokomo\">IUK</abbr>\n                </th>\n                <th className=\"status-matrix__campus\">\n                  <abbr title=\"Gary\">IUN</abbr>\n                </th>\n                <th className=\"status-matrix__campus\">\n                  <abbr title=\"South Bend\">IUSB</abbr>\n                </th>\n                <th className=\"status-matrix__campus\">\n                  <abbr title=\"New Albany\">IUS</abbr>\n                </th>\n              </tr>\n            </tr>\n            </thead>\n            <tbody>\n            {this.state.serviceGroups.map((service) =>\n              <tr key={service.id}>\n                <td>{service.name}</td>\n                <td>{service.description}</td>\n              </tr>\n            )}\n            </tbody>\n          </Table>\n        </React.Fragment>\n    );\n  }\n}\n\n\n","import React, { Component } from 'react';\nimport 'rivet-uits/css/rivet.css'\nimport { Table } from 'rivet-react'\n\nexport class Maintenance extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      notices: []\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://api.status-test.uits.iu.edu/Notices\")\n      .then(res => res.json())\n      .then(\n        (result) => {\n          this.setState({\n            isLoaded: true,\n            notices: result\n          });\n        },\n        // Note: it's important to handle errors here\n        // instead of a catch() block so that we don't swallow\n        // exceptions from actual bugs in components.\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            error\n          });\n        }\n      )\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <Table variant=\"stripes\" cells>\n          <thead>\n          <tr>\n            <th>Greeting</th>\n            <th>Audience</th>\n          </tr>\n          </thead>\n          <tbody>\n          {this.state.notices.map((notice) =>\n            <tr key={notice.id}>\n              <td>{notice.name}</td>\n              <td>{notice.content}</td>\n            </tr>\n          )}\n          </tbody>\n        </Table>\n      </React.Fragment>\n    );\n  }\n}\n\n\n","import React, { Component } from 'react';\nimport 'rivet-uits/css/rivet.css'\nimport { Badge, Row, Col, Panel } from 'rivet-react'\n\nexport class Notice extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      notice: {}\n    };\n  }\n\n  componentDidMount() {\n    let match = this.props.match\n    let params = match.params\n    let noticeId = params.noticeId\n\n    fetch(\"https://api.status-test.uits.iu.edu/Notices/\" + noticeId)\n      .then(res => res.json())\n      .then(\n        (result) => {\n          this.setState({\n            isLoaded: true,\n            notice: result\n          });\n        },\n        // Note: it's important to handle errors here\n        // instead of a catch() block so that we don't swallow\n        // exceptions from actual bugs in components.\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            error\n          });\n        }\n      )\n  }\n\n  render() {\n    let notice = this.state.notice\n\n    return (\n      <React.Fragment>\n        <Row>\n          <Col md={8}>\n            <h1>{notice.name}</h1>\n            <div>Services affected: {notice.services && notice.services.map(service =>\n              <Badge variant=\"info\" key={service.id}>{service.name}</Badge>\n            )}</div>\n            <p>{notice.content}</p>\n          </Col>\n          <Col md={4}>\n            <Panel>\n              <h2>Details</h2>\n              <ul className=\"rvt-plain-list\">\n                <li>\n                  <h3>ID No.</h3>\n                  <div>{notice.id}</div>\n                </li>\n                <li>\n                  <h3>Last status check</h3>\n                  <div>{notice.lastActivityOn}</div>\n                </li>\n                <li>\n                  <h3>Start date</h3>\n                  <div>{notice.changeStart || notice.publishedOn}</div>\n                </li>\n                <li>\n                  <h3>End date</h3>\n                  <div>{notice.changeEnd || \"Not set.\"}</div>\n                </li>\n              </ul>\n            </Panel>\n          </Col>\n        </Row>\n\n      </React.Fragment>\n    );\n  }\n}\n\n\n","import React, { Component } from 'react';\nimport 'rivet-uits/css/rivet.css'\nimport { Table } from 'rivet-react'\n\nexport class Notices extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      notices: []\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://api.status-test.uits.iu.edu/Notices\")\n      .then(res => res.json())\n      .then(\n        (result) => {\n          this.setState({\n            isLoaded: true,\n            notices: result\n          });\n        },\n        // Note: it's important to handle errors here\n        // instead of a catch() block so that we don't swallow\n        // exceptions from actual bugs in components.\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            error\n          });\n        }\n      )\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <Table variant=\"stripes\" cells>\n          <thead>\n          <tr>\n            <th>Greeting</th>\n            <th>Audience</th>\n          </tr>\n          </thead>\n          <tbody>\n          {this.state.notices.map((notice) =>\n            <tr key={notice.id}>\n              <td>{notice.name}</td>\n              <td>{notice.content}</td>\n            </tr>\n          )}\n          </tbody>\n        </Table>\n      </React.Fragment>\n    );\n  }\n}\n\n\n","import React from 'react';\nimport 'rivet-uits/css/rivet.css'\nimport { Header } from 'rivet-react'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport { Home, Calendar, Maintenance, Notice, Notices } from './pages'\n\nconst App = () => (\n  <Router basename={process.env.PUBLIC_URL}>\n    <React.Fragment>\n      <Header title={\"Status.IU\"} />\n      <Route exact path=\"/\" component={Home} />\n      <Route exact path=\"/notices\" component={Notices} />\n      <Route path=\"/notices/:noticeId\" component={Notice} />\n      <Route path=\"/calendar\" component={Calendar} />\n      <Route path=\"/maintenance\" component={Maintenance} />\n    </React.Fragment>\n  </Router>\n)\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}