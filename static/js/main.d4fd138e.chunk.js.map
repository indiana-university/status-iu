{"version":3,"sources":["pages/Calendar.js","status-api.js","icons.js","components/StatusMatrix.js","components/Notices.js","pages/Home.js","pages/Maintenance.js","pages/Notice.js","pages/Notices.js","App.js","index.js"],"names":["Calendar","_Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","error","isLoaded","notices","inherits","createClass","key","value","_this2","fetch","then","res","json","result","setState","react_default","a","createElement","Fragment","components","variant","cells","map","notice","id","name","content","Component","baseUrl","makeAPICall","context","endpoint","stateName","callback","defineProperty","checkmark","xmlns","width","height","viewBox","fill","d","rss","alt","transform","chevronDown","chevronRight","exclamation","cx","cy","r","minus","info","StatusMatrix","groups","services","isPartOfGroup","bind","assertThisInitialized","toggleGroup","expandGroupsWithNotices","getServiceIds","groupHasNotices","serviceHasNotice","serviceStatusByCampus","campusHasNotice","service","group","serviceGroup","serviceIds","i","length","push","join","findIndex","expanded","filter","s","setTimeout","campus","className","alert","ongoing","noticeType","campuses","c","abbreviation","_this3","margin","top","compact","title","onClick","Link","to","concat","target","rel","Notices","apply","arguments","type","modifier","typescale","right","Home","serviceGroups","filterNoticesByType","alertNotices","maintenanceNotices","informationNotices","ongoingNotices","tb","center","Notices_Notices","StatusMatrix_StatusMatrix","hide","Maintenance","Notice","noticeId","match","params","md","lastActivityOn","changeStart","publishedOn","changeEnd","App","BrowserRouter","basename","process","label","Route","exact","path","component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.d4fd138e.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport 'rivet-uits/css/rivet.css'\nimport { Table } from 'rivet-react'\n\nexport class Calendar extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      notices: []\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://api.status-test.uits.iu.edu/Notices\")\n      .then(res => res.json())\n      .then(\n        (result) => {\n          this.setState({\n            isLoaded: true,\n            notices: result\n          });\n        },\n        // Note: it's important to handle errors here\n        // instead of a catch() block so that we don't swallow\n        // exceptions from actual bugs in components.\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            error\n          });\n        }\n      )\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <Table variant=\"stripes\" cells>\n          <thead>\n          <tr>\n            <th>Greeting</th>\n            <th>Audience</th>\n          </tr>\n          </thead>\n          <tbody>\n          {this.state.notices.map((notice) =>\n            <tr key={notice.id}>\n              <td>{notice.name}</td>\n              <td>{notice.content}</td>\n            </tr>\n          )}\n          </tbody>\n        </Table>\n      </React.Fragment>\n    );\n  }\n}\n\n\n","const baseUrl='https://api.status-test.uits.iu.edu'\n\nfunction makeAPICall(context, endpoint, stateName, callback) {\n  return fetch(baseUrl + endpoint)\n    .then(res => res.json())\n    .then(\n      (result) => {\n        context.setState({\n          [stateName]: result\n        });\n        if(callback && typeof callback === 'function') {\n          callback()\n        }\n      },\n      // Note: it's important to handle errors here\n      // instead of a catch() block so that we don't swallow\n      // exceptions from actual bugs in components.\n      (error) => {\n        context.setState({\n          [stateName]: error\n        });\n      }\n    )\n}\n\nexport function notices(context) {\n  makeAPICall(context, '/Notices', 'notices')\n}\n\n\nexport function groups(context) {\n  makeAPICall(context, '/servicegroups', 'groups', context.expandGroupsWithNotices)\n}\n\nexport function services(context) {\n  makeAPICall(context, '/services', 'services')\n}\n\nexport function service(context, id) {\n  makeAPICall(context, '/services/' + id, 'service')\n}\n\nexport function campuses(context, id) {\n  makeAPICall(context, '/campuses', 'campuses')\n}\n\nexport function maintenanceWindows(context, id) {\n  makeAPICall(context, '/maintenancewindows', 'maintenanceWindows')\n}\n\n\n\n","import React from 'react';\n\nexport const checkmark = <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\">\n  <path fill=\"currentColor\" d=\"M8,16A8,8,0,1,1,10.29.33a1,1,0,0,1-.57,1.92A6,6,0,1,0,14,8a1,1,0,1,1,2,0A8,8,0,0,1,8,16Z\"/>\n  <path fill=\"currentColor\" d=\"M7.95,11.89a1.26,1.26,0,0,1-.75-.25L3.4,8.8A1,1,0,1,1,4.6,7.2L7.77,9.58,14.18.43a1,1,0,0,1,1.64,1.15L9,11.36a1.25,1.25,0,0,1-.83.52Zm-.62-1.68h0Z\"/>\n</svg>\n\nexport const rss = <svg alt=\"RSS feed\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 -256 1792 1792\" width=\"16\" height=\"16\">\n  <g transform=\"matrix(1,0,0,-1,212.61017,1346.1695)\">\n    <path\n      d=\"M 384,192 Q 384,112 328,56 272,0 192,0 112,0 56,56 0,112 0,192 q 0,80 56,136 56,56 136,56 80,0 136,-56 56,-56 56,-136 z M 896,69 Q 898,41 879,21 861,0 832,0 H 697 Q 672,0 654,16.5 636,33 634,58 612,287 449.5,449.5 287,612 58,634 33,636 16.5,654 0,672 0,697 v 135 q 0,29 21,47 17,17 43,17 h 5 Q 229,883 375,815.5 521,748 634,634 748,521 815.5,375 883,229 896,69 z m 512,-2 Q 1410,40 1390,20 1372,0 1344,0 H 1201 Q 1175,0 1156.5,17.5 1138,35 1137,60 1125,275 1036,468.5 947,662 804.5,804.5 662,947 468.5,1036 275,1125 60,1138 35,1139 17.5,1157.5 0,1176 0,1201 v 143 q 0,28 20,46 18,18 44,18 h 3 Q 329,1395 568.5,1288 808,1181 994,994 1181,808 1288,568.5 1395,329 1408,67 z\"\n      id=\"path2993\"\n      fill=\"currentColor\" />\n  </g>\n</svg>\n\nexport const chevronUp = <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\">\n  <path fill=\"currentColor\" d=\"M14,12a1,1,0,0,1-.76-.35L8,5.54,2.76,11.65a1,1,0,1,1-1.52-1.3L6.48,4.23a2.06,2.06,0,0,1,3,0l5.24,6.11A1,1,0,0,1,14,12Z\"/>\n</svg>\n\nexport const chevronDown = <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\">\n  <path fill=\"currentColor\" d=\"M8,12.46a2,2,0,0,1-1.52-.7L1.24,5.65a1,1,0,1,1,1.52-1.3L8,10.46l5.24-6.11a1,1,0,0,1,1.52,1.3L9.52,11.76A2,2,0,0,1,8,12.46Z\"/>\n</svg>\n\nexport const chevronRight = <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\">\n  <path fill=\"currentColor\" d=\"M5.5,15a1,1,0,0,1-.77-1.64L9.2,8,4.73,2.64A1,1,0,0,1,6.27,1.36L11.13,7.2a1.25,1.25,0,0,1,0,1.61L6.27,14.64A1,1,0,0,1,5.5,15ZM9.6,8.48h0Zm0-1h0Z\"/>\n</svg>\n\nexport const exclamation = <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\">\n  <g fill=\"currentColor\">\n    <path d=\"M8,16a8,8,0,1,1,8-8A8,8,0,0,1,8,16ZM8,2a6,6,0,1,0,6,6A6,6,0,0,0,8,2Z\"/>\n    <path d=\"M8,9A1,1,0,0,1,7,8V5A1,1,0,0,1,9,5V8A1,1,0,0,1,8,9Z\"/>\n    <circle cx=\"8\" cy=\"11\" r=\"1\"/>\n  </g>\n</svg>\n\nexport const minus = <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\">\n    <g fill=\"currentColor\">\n      <path d=\"M11,9H5A1,1,0,0,1,5,7h6a1,1,0,0,1,0,2Z\"/>\n      <path d=\"M8,16a8,8,0,1,1,8-8A8,8,0,0,1,8,16ZM8,2a6,6,0,1,0,6,6A6,6,0,0,0,8,2Z\"/>\n    </g>\n  </svg>\n\nexport const info = <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\">\n  <g fill=\"currentColor\">\n    <path d=\"M8,16a8,8,0,1,1,8-8A8,8,0,0,1,8,16ZM8,2a6,6,0,1,0,6,6A6,6,0,0,0,8,2Z\"/>\n    <path d=\"M8,12a1,1,0,0,1-1-1V8A1,1,0,0,1,9,8v3A1,1,0,0,1,8,12Z\"/>\n    <circle cx=\"8\" cy=\"5\" r=\"1\"/>\n  </g>\n</svg>","import React, { Component } from 'react';\nimport 'rivet-uits/css/rivet.css'\nimport { Table, Container } from 'rivet-react'\nimport { Link } from 'react-router-dom'\nimport {groups, services, notices} from '../status-api'\nimport './StatusMatrix.css'\nimport {checkmark, chevronDown, chevronRight, rss, exclamation, minus, info} from '../icons'\n\n\nexport class StatusMatrix extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      notices: [],\n      groups: [],\n      services: []\n    };\n    this.isPartOfGroup = this.isPartOfGroup.bind(this)\n    this.toggleGroup = this.toggleGroup.bind(this)\n    this.expandGroupsWithNotices = this.expandGroupsWithNotices.bind(this)\n    this.getServiceIds = this.getServiceIds.bind(this)\n    this.groupHasNotices = this.groupHasNotices.bind(this)\n    this.serviceHasNotice = this.serviceHasNotice.bind(this)\n    this.serviceStatusByCampus = this.serviceStatusByCampus.bind(this)\n    this.campusHasNotice = this.campusHasNotice.bind(this)\n  }\n\n  isPartOfGroup(service, group) {\n    if(service && group) {\n        return service.serviceGroup.id === group.id\n    }\n    return false\n  }\n\n  getServiceIds(group) {\n    let serviceIds = []\n    let services = this.state.services\n\n\n    // find the services that are a part of this group\n    for(let i=0; i < services.length; i++) {\n      if(this.isPartOfGroup(services[i], group)) {\n        serviceIds.push(services[i].id)\n      }\n    }\n\n    return serviceIds.join(',')\n  }\n\n  toggleGroup(id) {\n    let groups = this.state.groups\n    let group = groups.findIndex((group) => {\n      return group.id === id\n    })\n\n    groups[group].expanded = !groups[group].expanded\n    this.setState({groups});\n  }\n\n  serviceHasNotice(service) {\n    let notices = this.state.notices\n\n    return notices.filter((notice) => {\n      return notice.services.filter((s) => {\n        return s.id === service.id\n      }).length > 0\n    }).length > 0\n\n  }\n\n  groupHasNotices(group) {\n    for(let i=0; i < this.state.services.length; i++) {\n      if(this.isPartOfGroup(this.state.services[i], group) && this.serviceHasNotice(this.state.services[i])) {\n        return true\n      }\n    }\n    return false\n  }\n\n  expandGroupsWithNotices() {\n    // make sure all the APIs have finished before expanding\n    if(this.state.groups.length === 0 || this.state.services.length === 0 || this.state.notices.length === 0) {\n      setTimeout(function() { this.expandGroupsWithNotices() }.bind(this), 100)\n    }\n\n    let groups = this.state.groups\n\n    for(let i=0; i < groups.length; i++) {\n      if(this.groupHasNotices(groups[i])) {\n        groups[i].expanded = true\n      }\n    }\n\n    this.setState({groups});\n\n  }\n\n  serviceStatusByCampus(service) {\n    let campuses = ['IUB', 'IUPUI', 'IUPUC', 'IUFW', 'IUK', 'IUE', 'IUN', 'IUSB', 'IUS']\n\n    return campuses.map((campus) => {\n      return this.campusHasNotice(campus, service) || <td className=\"status-icon status-icon--good rvt-alert--success\">{checkmark}</td>\n    })\n  }\n\n  campusHasNotice(campus, service) {\n    let alert = false\n    let ongoing = false\n    let info = false\n\n    let notices = this.state.notices.filter((notice) => {\n       if(notice.services.filter((s) => {\n        return s.id === service.id\n      }).length > 0) {\n         if(notice.noticeType === 'Alert') {\n           alert = true;\n         }\n         if(notice.noticeType === 'Information') {\n           info = true;\n         }\n         if(notice.noticeType === 'Ongoing') {\n           ongoing = true;\n         }\n         return true;\n       }\n    })\n\n    let campusHasNotifications = notices.filter((notice) => {\n      return notice.campuses.filter((c) => {\n        return c.abbreviation === campus\n      }).length > 0\n    })\n\n    if(campusHasNotifications.length === 0) {\n      if(alert) {\n        return <td className=\"status-icon status-icon--good rvt-alert--danger\">{exclamation}</td>\n      } else if(ongoing) {\n        return <td className=\"status-icon status-icon--good rvt-alert--warning\">{minus}</td>\n      } else if(info) {\n        return <td className=\"status-icon status-icon--good rvt-alert--info\">{info}</td>\n      } else {\n        return <td className=\"status-icon status-icon--good rvt-alert--success\">{checkmark}</td>\n      }\n    } else {\n      return <td className=\"status-icon status-icon--good rvt-alert--success\">{checkmark}</td>\n    }\n\n  }\n\n  componentDidMount() {\n    groups(this)\n    services(this)\n    notices(this)\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"status-key\">\n          <ul className=\"status-key__list\">\n            <li className=\"status-key__item status-key__item--alert\">\n              <span className=\"rvt-alert--danger rvt-m-right-xxs\">{exclamation}</span>\n              <span>Alert</span>\n            </li>\n            <li className=\"status-key__item status-key__item--ongoing\">\n              <span className=\"rvt-alert--warning rvt-m-right-xxs\">{minus}</span>\n              <span>Ongoing issue</span>\n            </li>\n            <li className=\"status-key__item status-key__item--maintenance\">\n              <span className=\"rvt-alert--info rvt-m-right-xxs\">{info}</span>\n              <span>Maintenance</span>\n            </li>\n            <li className=\"status-key__item status-key__item--good\">\n              <span className=\"rvt-alert--success rvt-m-right-xxs\">{checkmark}</span>\n              <span>Healthy</span>\n            </li>\n          </ul>\n        </div>\n        <Table margin={{top: \"md\"}} compact>\n          <thead>\n            <tr>\n              <th width=\"350\">Service category</th>\n              <th className=\"status-matrix__campus\">\n                <abbr title=\"Bloomington\">IUB</abbr>\n              </th>\n              <th className=\"status-matrix__campus\">\n                <abbr title=\"Indianapolis\">IUPUI</abbr>\n              </th>\n              <th className=\"status-matrix__campus\">\n                <abbr title=\"Columbus\">IUPUC</abbr>\n              </th>\n              <th className=\"status-matrix__campus\">\n                <abbr title=\"Richmond\">IUE</abbr>\n              </th>\n              <th className=\"status-matrix__campus\">\n                <abbr title=\"Fort Wayne\">IUFW</abbr>\n              </th>\n              <th className=\"status-matrix__campus\">\n                <abbr title=\"Kokomo\">IUK</abbr>\n              </th>\n              <th className=\"status-matrix__campus\">\n                <abbr title=\"Gary\">IUN</abbr>\n              </th>\n              <th className=\"status-matrix__campus\">\n                <abbr title=\"South Bend\">IUSB</abbr>\n              </th>\n              <th className=\"status-matrix__campus\">\n                <abbr title=\"New Albany\">IUS</abbr>\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            {this.state.groups.map((group) =>\n              <React.Fragment key={group.id}>\n                <tr className=\"status-matrix__header-row\">\n                  <td className=\"status-matrix__category\">\n                    <button onClick={()=>this.toggleGroup(group.id)} className=\"rvt-button--plain status-matrix__category-toggle js-toggle__trigger\">\n                      {group.expanded ? chevronDown : chevronRight}\n                      <span className=\"rvt-m-left-xs\">{group.name}</span>\n                    </button>\n                    <Link to={`/Rss?services=${this.getServiceIds(group)}`}\n                       target=\"_blank\"\n                       rel=\"noopener noreferrer\"\n                       className=\"status-matrix__category-rss\">\n                      {rss}\n                      <span className=\"rvt-sr-only\">RSS feed for {group.name}</span>\n                    </Link>\n                  </td>\n\n                  <td className=\"status-icon status-icon--good rvt-alert--success\">{checkmark}</td>\n                  <td className=\"status-icon status-icon--good rvt-alert--success\">{checkmark}</td>\n                  <td className=\"status-icon status-icon--good rvt-alert--info\">{info}</td>\n                  <td className=\"status-icon status-icon--good rvt-alert--success\">{checkmark}</td>\n                  <td className=\"status-icon status-icon--good rvt-alert--error\">{exclamation}</td>\n                  <td className=\"status-icon status-icon--good rvt-alert--warning\">{minus}</td>\n                  <td className=\"status-icon status-icon--good rvt-alert--success\">{checkmark}</td>\n                  <td className=\"status-icon status-icon--good rvt-alert--success\">{checkmark}</td>\n                  <td className=\"status-icon status-icon--good rvt-alert--success\">{checkmark}</td>\n                </tr>\n                {group.expanded && this.state.services.map((service) =>\n                  <React.Fragment key={service.id}>\n                    { this.isPartOfGroup(service, group) &&\n                      <tr className=\"status-matrix__sub-row js-toggle__target\">\n                        <td className=\"status-matrix__service\">\n                          <Link className=\"rvt-ts-xs rvt-m-left-lg status-matrix__service-title\" to={`/service/${service.id}`}>{service.name}</Link>\n                          <Link to={`/Rss?services=${service.id}`} target=\"_blank\" rel=\"noopener noreferrer\" className=\"status-matrix__service-rss\">\n                            {rss}\n                          </Link>\n                        </td>\n                        <td className=\"status-icon status-icon--good rvt-alert--success\">{checkmark}</td>\n                        <td className=\"status-icon status-icon--good rvt-alert--success\">{checkmark}</td>\n                        <td className=\"status-icon status-icon--good rvt-alert--info\">{info}</td>\n                        <td className=\"status-icon status-icon--good rvt-alert--success\">{checkmark}</td>\n                        <td className=\"status-icon status-icon--good rvt-alert--danger\">{exclamation}</td>\n                        <td className=\"status-icon status-icon--good rvt-alert--warning\">{minus}</td>\n                        <td className=\"status-icon status-icon--good rvt-alert--success\">{checkmark}</td>\n                        <td className=\"status-icon status-icon--good rvt-alert--success\">{checkmark}</td>\n                        <td className=\"status-icon status-icon--good rvt-alert--success\">{checkmark}</td>\n                      </tr>\n                    }\n                  </React.Fragment>\n                )}\n              </React.Fragment>\n            )}\n          </tbody>\n        </Table>\n      </React.Fragment>\n    );\n  }\n}\n\n\n","import React, { Component } from 'react';\nimport 'rivet-uits/css/rivet.css'\nimport './Notices.css'\nimport { Link } from 'react-router-dom';\nimport { Badge } from 'rivet-react'\n\n\nexport class Notices extends Component {\n  render() {\n    let props = this.props;\n    let title = props.title;\n    let notices = props.notices;\n    let type = props.type;\n\n    return (\n      <React.Fragment>\n        {!!notices.length &&\n          <div className={`message-box message-box--${type}`}>\n            <header className=\"message-box-header\">\n              <h2 className=\"message-box-header__message\">{title}</h2>\n              <div className=\"message-box-header__count\">{notices.length}</div>\n            </header>\n            <ul className=\"message-box__list\">\n              {notices && notices.map((notice) =>\n                <li className=\"message-box__list-item\" key={notice.id}>\n                  <div className=\"container kill-vertical\">\n                    <div className=\"unit four-fifths\">\n                      <Link to={`/notices/${notice.id}`}>{notice.name}</Link>\n                      {notice.services.length > 1 &&\n                        <div>\n                          <span className=\"rvt-ts-xs rvt-text-bold rvt-m-right-xs\">Affected services:</span>\n                          {notice.services.map((service) =>\n                            <Badge key={service.id} modifier=\"secondary\" typescale=\"xxs\" margin={{right:'xxs', top:'xs'}}>{service.name}</Badge>\n                          )}\n                        </div>\n                      }\n                    </div>\n                  </div>\n                </li>\n              )}\n            </ul>\n          </div>\n        }\n      </React.Fragment>\n    );\n  }\n}\n\n\n","import React, { Component } from 'react';\nimport 'rivet-uits/css/rivet.css'\nimport { notices } from '../status-api'\nimport {Container} from 'rivet-react'\nimport { Notices, StatusMatrix } from \"../components\";\n\nexport class Home extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      notices: [],\n      serviceGroups: []\n    };\n\n    this.filterNoticesByType = this.filterNoticesByType.bind(this)\n\n  }\n\n  componentDidMount() {\n    notices(this)\n  }\n\n  filterNoticesByType(type) {\n    let notices = this.state.notices\n    return notices.filter((notice) => {\n      return notice.noticeType === type\n    })\n  }\n\n  render() {\n    let filterNoticesByType = this.filterNoticesByType\n    let alertNotices = filterNoticesByType('Alert')\n    let maintenanceNotices = filterNoticesByType('Maintenance')\n    let informationNotices = filterNoticesByType('Information')\n    let ongoingNotices = filterNoticesByType('Ongoing')\n\n    return (\n      <Container margin={{tb: \"md\"}} width=\"senior\" center>\n        <Notices type='alert' notices={alertNotices} title=\"Alert notices\" />\n        <Notices type='maintenance' notices={maintenanceNotices} title=\"Maintenance notices\" />\n        <Notices type='information' notices={informationNotices} title=\"Information notices\" />\n        <Notices type='ongoing' notices={ongoingNotices} title=\"On-going notices\" />\n        <StatusMatrix hide=\"md-down\" />\n      </Container>\n    );\n  }\n}\n\n\n","import React, { Component } from 'react';\nimport 'rivet-uits/css/rivet.css'\nimport { Table } from 'rivet-react'\n\nexport class Maintenance extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      notices: []\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://api.status-test.uits.iu.edu/Notices\")\n      .then(res => res.json())\n      .then(\n        (result) => {\n          this.setState({\n            isLoaded: true,\n            notices: result\n          });\n        },\n        // Note: it's important to handle errors here\n        // instead of a catch() block so that we don't swallow\n        // exceptions from actual bugs in components.\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            error\n          });\n        }\n      )\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <Table variant=\"stripes\" cells>\n          <thead>\n          <tr>\n            <th>Greeting</th>\n            <th>Audience</th>\n          </tr>\n          </thead>\n          <tbody>\n          {this.state.notices.map((notice) =>\n            <tr key={notice.id}>\n              <td>{notice.name}</td>\n              <td>{notice.content}</td>\n            </tr>\n          )}\n          </tbody>\n        </Table>\n      </React.Fragment>\n    );\n  }\n}\n\n\n","import React, { Component } from 'react';\nimport 'rivet-uits/css/rivet.css'\nimport { Badge, Row, Col, Panel } from 'rivet-react'\nimport {checkmark, exclamation, info, minus} from \"../icons\";\n\nexport class Notice extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      notice: {}\n    };\n  }\n\n  componentDidMount() {\n    let match = this.props.match\n    let params = match.params\n    let noticeId = params.noticeId\n\n    fetch(\"https://api.status-test.uits.iu.edu/Notices/\" + noticeId)\n      .then(res => res.json())\n      .then(\n        (result) => {\n          this.setState({\n            isLoaded: true,\n            notice: result\n          });\n        },\n        // Note: it's important to handle errors here\n        // instead of a catch() block so that we don't swallow\n        // exceptions from actual bugs in components.\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            error\n          });\n        }\n      )\n  }\n\n  render() {\n    let notice = this.state.notice\n\n    return (\n      <React.Fragment>\n        <Row>\n          <Col md={8}>\n            <h1 className=\"rvt-ts-41 rvt-text-bold\">{notice.name}</h1>\n            <div className=\"rvt-m-tb-md\">Affected services: {notice.services && notice.services.map(service =>\n              <Badge variant=\"info\" key={service.id}>{service.name}</Badge>\n            )}</div>\n            <p>{notice.content}</p>\n            <h2 className=\"rvt-text-bold rvt-m-top-lg\">Affected campuses</h2>\n            <div className=\"rvt-m-tb-sm status-matrix status-matrix--single\">\n              <table>\n                <thead>\n                <tr>\n                  <th className=\"status-matrix__campus\">IUB</th>\n                  <th className=\"status-matrix__campus\">IUPUI</th>\n                  <th className=\"status-matrix__campus\">IUPUC</th>\n                  <th className=\"status-matrix__campus\">IUE</th>\n                  <th className=\"status-matrix__campus\">IUFW</th>\n                  <th className=\"status-matrix__campus\">IUK</th>\n                  <th className=\"status-matrix__campus\">IUN</th>\n                  <th className=\"status-matrix__campus\">IUSB</th>\n                  <th className=\"status-matrix__campus\">IUS</th>\n                </tr>\n                </thead>\n                <tbody>\n                <tr>\n                  <td className=\"status-icon status-icon--good rvt-alert--success\">{checkmark}</td>\n                  <td className=\"status-icon status-icon--good rvt-alert--success\">{checkmark}</td>\n                  <td className=\"status-icon status-icon--good rvt-alert--info\">{info}</td>\n                  <td className=\"status-icon status-icon--good rvt-alert--success\">{checkmark}</td>\n                  <td className=\"status-icon status-icon--good rvt-alert--error\">{exclamation}</td>\n                  <td className=\"status-icon status-icon--good rvt-alert--warning\">{minus}</td>\n                  <td className=\"status-icon status-icon--good rvt-alert--success\">{checkmark}</td>\n                  <td className=\"status-icon status-icon--good rvt-alert--success\">{checkmark}</td>\n                  <td className=\"status-icon status-icon--good rvt-alert--success\">{checkmark}</td>\n                </tr>\n                </tbody>\n              </table>\n            </div>\n\n            <div className=\"status-key status-key--left\">\n              <ul className=\"status-key__list\">\n                <li className=\"status-key__item status-key__item--alert\">\n                  <span className=\"rvt-alert--danger rvt-m-right-xxs\">{exclamation}</span>\n                  <span>Alert</span>\n                </li>\n                <li className=\"status-key__item status-key__item--ongoing\">\n                  <span className=\"rvt-alert--warning rvt-m-right-xxs\">{minus}</span>\n                  <span>Ongoing issue</span>\n                </li>\n                <li className=\"status-key__item status-key__item--maintenance\">\n                  <span className=\"rvt-alert--info rvt-m-right-xxs\">{info}</span>\n                  <span>Maintenance</span>\n                </li>\n                <li className=\"status-key__item status-key__item--good\">\n                  <span className=\"rvt-alert--success rvt-m-right-xxs\">{checkmark}</span>\n                  <span>Healthy</span>\n                </li>\n              </ul>\n            </div>\n          </Col>\n          <Col md={4}>\n            <Panel>\n              <h2>Details</h2>\n              <ul className=\"rvt-plain-list\">\n                <li>\n                  <h3>ID No.</h3>\n                  <div>{notice.id}</div>\n                </li>\n                <li>\n                  <h3>Last status check</h3>\n                  <div>{notice.lastActivityOn}</div>\n                </li>\n                <li>\n                  <h3>Start date</h3>\n                  <div>{notice.changeStart || notice.publishedOn}</div>\n                </li>\n                <li>\n                  <h3>End date</h3>\n                  <div>{notice.changeEnd || \"Not set.\"}</div>\n                </li>\n              </ul>\n            </Panel>\n          </Col>\n        </Row>\n\n      </React.Fragment>\n    );\n  }\n}\n\n\n","import React, { Component } from 'react';\nimport 'rivet-uits/css/rivet.css'\nimport { Table } from 'rivet-react'\n\nexport class Notices extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      notices: []\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://api.status-test.uits.iu.edu/Notices\")\n      .then(res => res.json())\n      .then(\n        (result) => {\n          this.setState({\n            isLoaded: true,\n            notices: result\n          });\n        },\n        // Note: it's important to handle errors here\n        // instead of a catch() block so that we don't swallow\n        // exceptions from actual bugs in components.\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            error\n          });\n        }\n      )\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <Table variant=\"stripes\" cells>\n          <thead>\n          <tr>\n            <th>Greeting</th>\n            <th>Audience</th>\n          </tr>\n          </thead>\n          <tbody>\n          {this.state.notices.map((notice) =>\n            <tr key={notice.id}>\n              <td>{notice.name}</td>\n              <td>{notice.content}</td>\n            </tr>\n          )}\n          </tbody>\n        </Table>\n      </React.Fragment>\n    );\n  }\n}\n\n\n","import React from 'react';\nimport 'rivet-uits/css/rivet.css'\nimport {Container, Header, HeaderMenu, HeaderNavigation} from 'rivet-react'\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom'\nimport { Home, Calendar, Maintenance, Notice, Notices } from './pages'\n\nconst App = () => (\n  <Router basename={process.env.PUBLIC_URL}>\n    <React.Fragment>\n      <Header title=\"Status.IU\">\n        <HeaderNavigation>\n          <HeaderMenu label=\"Information\">\n            <Link to=\"/notices/28\">CAS and iuware have no end dates</Link>\n            <Link to=\"/notices/62\">New Test Notice Title Update</Link>\n            <Link to=\"/notices/46055\">Two Step for ALL</Link>\n          </HeaderMenu>\n          <Link to=\"/maintenance\">Maintenance</Link>\n          <Link to=\"/calendar\">Calender</Link>\n        </HeaderNavigation>\n\n      </Header>\n      <main id=\"main-content\">\n        <Container margin={{tb: \"md\"}} width=\"senior\" center>\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/notices\" component={Notices} />\n          <Route path=\"/notices/:noticeId\" component={Notice} />\n          <Route path=\"/calendar\" component={Calendar} />\n          <Route path=\"/maintenance\" component={Maintenance} />\n        </Container>\n      </main>\n    </React.Fragment>\n  </Router>\n)\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}