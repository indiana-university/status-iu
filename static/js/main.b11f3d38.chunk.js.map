{"version":3,"sources":["pages/Calendar.js","status-api.js","icons.js","components/StatusMatrix.js","components/Notices.js","pages/Home.js","pages/Maintenance.js","pages/Notice.js","pages/Notices.js","App.js","index.js"],"names":["Calendar","_Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","error","isLoaded","notices","search","bind","assertThisInitialized","inherits","createClass","key","value","start","end","_this2","Date","toISOString","fetch","then","res","json","result","setState","_this3","react_default","a","createElement","Fragment","className","components","margin","top","md","type","onChange","event","target","variant","cells","map","notice","id","Link","to","concat","name","Component","baseUrl","makeAPICall","context","endpoint","stateName","callback","defineProperty","checkmark","xmlns","width","height","viewBox","fill","d","rss","alt","transform","chevronDown","chevronRight","exclamation","cx","cy","r","minus","info","StatusMatrix","groups","services","isPartOfGroup","toggleGroup","expandGroupsWithNotices","getServiceIds","groupHasNotices","serviceHasNotice","serviceStatusByCampus","campusHasNotice","service","group","serviceGroup","serviceIds","i","length","push","join","findIndex","expanded","filter","s","setTimeout","campus","alert","ongoing","noticeType","campuses","c","abbreviation","compact","title","onClick","rel","Notices","apply","arguments","modifier","typescale","right","Home","serviceGroups","filterNoticesByType","alertNotices","maintenanceNotices","informationNotices","ongoingNotices","tb","center","Notices_Notices","StatusMatrix_StatusMatrix","hide","Maintenance","maintenanceWindows","maintenance","frequency","day","time","Notice","noticeId","match","params","content","lastActivityOn","changeStart","publishedOn","changeEnd","App","BrowserRouter","basename","process","label","Route","exact","path","component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.b11f3d38.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport 'rivet-uits/css/rivet.css'\nimport { Table, Container, Col, Row } from 'rivet-react'\nimport {Link} from \"react-router-dom\";\n\nexport class Calendar extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      notices: []\n    };\n    this.search = this.search.bind(this)\n  }\n\n  search(start, end) {\n    if(!start) {\n      return false\n    }\n\n\n    start = new Date(start)\n\n    if(!end) {\n      end = start\n    }\n\n    end = new Date(end)\n    start = start.toISOString()\n    end = end.toISOString()\n    fetch('https://api.status-test.uits.iu.edu/notices/search?visibleStart='+start+'&visibleEnd=' + end)\n      .then(res => res.json())\n      .then(\n        (result) => {\n          this.setState({\n            notices: result\n          });\n        },\n        // Note: it's important to handle errors here\n        // instead of a catch() block so that we don't swallow\n        // exceptions from actual bugs in components.\n        (error) => {\n          this.setState({\n            notices: error\n          });\n      }\n    )\n  }\n\n  componentDidMount() {\n    this.search(new Date())\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <h1 className=\"rvt-ts-41 rvt-text-bold\">Notices calendar</h1>\n\n        <hr />\n\n        <Container margin={{top: 'lg'}}>\n          <Row>\n            <Col md={4}>\n              <input type=\"date\" onChange={event=>this.search(event.target.value)} />\n            </Col>\n            <Col md={8}>\n              <Table variant=\"stripes\" cells>\n                <thead>\n                <tr>\n                  <th>Maintenance notices</th>\n                </tr>\n                </thead>\n                <tbody>\n                {this.state.notices.map((notice) =>\n                  <tr key={notice.id}>\n                    <td>\n                      <Link to={`/notices/${notice.id}`}>{notice.name}</Link>\n                    </td>\n                  </tr>\n                )}\n                </tbody>\n              </Table>\n            </Col>\n          </Row>\n        </Container>\n      </React.Fragment>\n    );\n  }\n}\n\n\n","const baseUrl='https://api.status-test.uits.iu.edu'\n\nfunction makeAPICall(context, endpoint, stateName, callback) {\n  return fetch(baseUrl + endpoint)\n    .then(res => res.json())\n    .then(\n      (result) => {\n        context.setState({\n          [stateName]: result\n        });\n        if(callback && typeof callback === 'function') {\n          callback()\n        }\n      },\n      // Note: it's important to handle errors here\n      // instead of a catch() block so that we don't swallow\n      // exceptions from actual bugs in components.\n      (error) => {\n        context.setState({\n          [stateName]: error\n        });\n      }\n    )\n}\n\nexport function notices(context) {\n  makeAPICall(context, '/Notices', 'notices')\n}\n\n\nexport function groups(context) {\n  makeAPICall(context, '/servicegroups', 'groups', context.expandGroupsWithNotices)\n}\n\nexport function services(context) {\n  makeAPICall(context, '/services', 'services')\n}\n\nexport function service(context, id) {\n  makeAPICall(context, '/services/' + id, 'service')\n}\n\nexport function campuses(context) {\n  makeAPICall(context, '/campuses', 'campuses')\n}\n\nexport function maintenanceWindows(context) {\n  makeAPICall(context, '/maintenancewindows', 'maintenanceWindows')\n}\n\n\n","import React from 'react';\n\nexport const checkmark = <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\">\n  <path fill=\"currentColor\" d=\"M8,16A8,8,0,1,1,10.29.33a1,1,0,0,1-.57,1.92A6,6,0,1,0,14,8a1,1,0,1,1,2,0A8,8,0,0,1,8,16Z\"/>\n  <path fill=\"currentColor\" d=\"M7.95,11.89a1.26,1.26,0,0,1-.75-.25L3.4,8.8A1,1,0,1,1,4.6,7.2L7.77,9.58,14.18.43a1,1,0,0,1,1.64,1.15L9,11.36a1.25,1.25,0,0,1-.83.52Zm-.62-1.68h0Z\"/>\n</svg>\n\nexport const rss = <svg alt=\"RSS feed\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 -256 1792 1792\" width=\"16\" height=\"16\">\n  <g transform=\"matrix(1,0,0,-1,212.61017,1346.1695)\">\n    <path\n      d=\"M 384,192 Q 384,112 328,56 272,0 192,0 112,0 56,56 0,112 0,192 q 0,80 56,136 56,56 136,56 80,0 136,-56 56,-56 56,-136 z M 896,69 Q 898,41 879,21 861,0 832,0 H 697 Q 672,0 654,16.5 636,33 634,58 612,287 449.5,449.5 287,612 58,634 33,636 16.5,654 0,672 0,697 v 135 q 0,29 21,47 17,17 43,17 h 5 Q 229,883 375,815.5 521,748 634,634 748,521 815.5,375 883,229 896,69 z m 512,-2 Q 1410,40 1390,20 1372,0 1344,0 H 1201 Q 1175,0 1156.5,17.5 1138,35 1137,60 1125,275 1036,468.5 947,662 804.5,804.5 662,947 468.5,1036 275,1125 60,1138 35,1139 17.5,1157.5 0,1176 0,1201 v 143 q 0,28 20,46 18,18 44,18 h 3 Q 329,1395 568.5,1288 808,1181 994,994 1181,808 1288,568.5 1395,329 1408,67 z\"\n      id=\"path2993\"\n      fill=\"currentColor\" />\n  </g>\n</svg>\n\nexport const chevronUp = <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\">\n  <path fill=\"currentColor\" d=\"M14,12a1,1,0,0,1-.76-.35L8,5.54,2.76,11.65a1,1,0,1,1-1.52-1.3L6.48,4.23a2.06,2.06,0,0,1,3,0l5.24,6.11A1,1,0,0,1,14,12Z\"/>\n</svg>\n\nexport const chevronDown = <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\">\n  <path fill=\"currentColor\" d=\"M8,12.46a2,2,0,0,1-1.52-.7L1.24,5.65a1,1,0,1,1,1.52-1.3L8,10.46l5.24-6.11a1,1,0,0,1,1.52,1.3L9.52,11.76A2,2,0,0,1,8,12.46Z\"/>\n</svg>\n\nexport const chevronRight = <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\">\n  <path fill=\"currentColor\" d=\"M5.5,15a1,1,0,0,1-.77-1.64L9.2,8,4.73,2.64A1,1,0,0,1,6.27,1.36L11.13,7.2a1.25,1.25,0,0,1,0,1.61L6.27,14.64A1,1,0,0,1,5.5,15ZM9.6,8.48h0Zm0-1h0Z\"/>\n</svg>\n\nexport const exclamation = <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\">\n  <g fill=\"currentColor\">\n    <path d=\"M8,16a8,8,0,1,1,8-8A8,8,0,0,1,8,16ZM8,2a6,6,0,1,0,6,6A6,6,0,0,0,8,2Z\"/>\n    <path d=\"M8,9A1,1,0,0,1,7,8V5A1,1,0,0,1,9,5V8A1,1,0,0,1,8,9Z\"/>\n    <circle cx=\"8\" cy=\"11\" r=\"1\"/>\n  </g>\n</svg>\n\nexport const minus = <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\">\n    <g fill=\"currentColor\">\n      <path d=\"M11,9H5A1,1,0,0,1,5,7h6a1,1,0,0,1,0,2Z\"/>\n      <path d=\"M8,16a8,8,0,1,1,8-8A8,8,0,0,1,8,16ZM8,2a6,6,0,1,0,6,6A6,6,0,0,0,8,2Z\"/>\n    </g>\n  </svg>\n\nexport const info = <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\">\n  <g fill=\"currentColor\">\n    <path d=\"M8,16a8,8,0,1,1,8-8A8,8,0,0,1,8,16ZM8,2a6,6,0,1,0,6,6A6,6,0,0,0,8,2Z\"/>\n    <path d=\"M8,12a1,1,0,0,1-1-1V8A1,1,0,0,1,9,8v3A1,1,0,0,1,8,12Z\"/>\n    <circle cx=\"8\" cy=\"5\" r=\"1\"/>\n  </g>\n</svg>","import React, { Component } from 'react';\nimport 'rivet-uits/css/rivet.css'\nimport { Table } from 'rivet-react'\nimport { Link } from 'react-router-dom'\nimport {groups, services, notices} from '../status-api'\nimport './StatusMatrix.css'\nimport {checkmark, chevronDown, chevronRight, rss, exclamation, minus, info} from '../icons'\n\n\nexport class StatusMatrix extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      notices: [],\n      groups: [],\n      services: []\n    };\n    this.isPartOfGroup = this.isPartOfGroup.bind(this)\n    this.toggleGroup = this.toggleGroup.bind(this)\n    this.expandGroupsWithNotices = this.expandGroupsWithNotices.bind(this)\n    this.getServiceIds = this.getServiceIds.bind(this)\n    this.groupHasNotices = this.groupHasNotices.bind(this)\n    this.serviceHasNotice = this.serviceHasNotice.bind(this)\n    this.serviceStatusByCampus = this.serviceStatusByCampus.bind(this)\n    this.campusHasNotice = this.campusHasNotice.bind(this)\n  }\n\n  isPartOfGroup(service, group) {\n    if(service && group) {\n        return service.serviceGroup.id === group.id\n    }\n    return false\n  }\n\n  getServiceIds(group) {\n    let serviceIds = []\n    let services = this.state.services\n\n\n    // find the services that are a part of this group\n    for(let i=0; i < services.length; i++) {\n      if(this.isPartOfGroup(services[i], group)) {\n        serviceIds.push(services[i].id)\n      }\n    }\n\n    return serviceIds.join(',')\n  }\n\n  toggleGroup(id) {\n    let groups = this.state.groups\n    let group = groups.findIndex((group) => {\n      return group.id === id\n    })\n\n    groups[group].expanded = !groups[group].expanded\n    this.setState({groups});\n  }\n\n  serviceHasNotice(service) {\n    let notices = this.state.notices\n\n    return notices.filter((notice) => {\n      return notice.services.filter((s) => {\n        return s.id === service.id\n      }).length > 0\n    }).length > 0\n\n  }\n\n  groupHasNotices(group) {\n    for(let i=0; i < this.state.services.length; i++) {\n      if(this.isPartOfGroup(this.state.services[i], group) && this.serviceHasNotice(this.state.services[i])) {\n        return true\n      }\n    }\n    return false\n  }\n\n  expandGroupsWithNotices() {\n    // make sure all the APIs have finished before expanding\n    if(this.state.groups.length === 0 || this.state.services.length === 0 || this.state.notices.length === 0) {\n      setTimeout(function() { this.expandGroupsWithNotices() }.bind(this), 100)\n    }\n\n    let groups = this.state.groups\n\n    for(let i=0; i < groups.length; i++) {\n      if(this.groupHasNotices(groups[i])) {\n        groups[i].expanded = true\n      }\n    }\n\n    this.setState({groups});\n\n  }\n\n  serviceStatusByCampus(service) {\n    let campuses = ['IUB', 'IUPUI', 'IUPUC', 'IUFW', 'IUK', 'IUE', 'IUN', 'IUSB', 'IUS']\n\n    return campuses.map((campus) => {\n      return this.campusHasNotice(campus, service) || <td className=\"status-icon status-icon--good rvt-alert--success\">{checkmark}</td>\n    })\n  }\n\n  campusHasNotice(campus, service) {\n    let alert = false\n    let ongoing = false\n    let info = false\n\n    let notices = this.state.notices.filter((notice) => {\n      // if the services for this notice match the service\n       if(notice.services.filter((s) => {\n        return s.id === service.id\n      }).length > 0) {\n         if(notice.noticeType === 'Alert') {\n           alert = true;\n         }\n         if(notice.noticeType === 'Information') {\n           info = true;\n         }\n         if(notice.noticeType === 'Ongoing') {\n           ongoing = true;\n         }\n         return true;\n       }\n\n       return false;\n    })\n\n    let campusHasNotifications = notices.filter((notice) => {\n      return notice.campuses.filter((c) => {\n        return c.abbreviation === campus\n      }).length > 0\n    })\n\n    if(campusHasNotifications.length === 0) {\n      if(alert) {\n        return <td className=\"status-icon status-icon--good rvt-alert--danger\">{exclamation}</td>\n      } else if(ongoing) {\n        return <td className=\"status-icon status-icon--good rvt-alert--warning\">{minus}</td>\n      } else if(info) {\n        return <td className=\"status-icon status-icon--good rvt-alert--info\">{info}</td>\n      } else {\n        return <td className=\"status-icon status-icon--good rvt-alert--success\">{checkmark}</td>\n      }\n    } else {\n      return <td className=\"status-icon status-icon--good rvt-alert--success\">{checkmark}</td>\n    }\n\n  }\n\n  componentDidMount() {\n    groups(this)\n    services(this)\n    notices(this)\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"status-key\">\n          <ul className=\"status-key__list\">\n            <li className=\"status-key__item status-key__item--alert\">\n              <span className=\"rvt-alert--danger rvt-m-right-xxs\">{exclamation}</span>\n              <span>Alert</span>\n            </li>\n            <li className=\"status-key__item status-key__item--ongoing\">\n              <span className=\"rvt-alert--warning rvt-m-right-xxs\">{minus}</span>\n              <span>Ongoing issue</span>\n            </li>\n            <li className=\"status-key__item status-key__item--maintenance\">\n              <span className=\"rvt-alert--info rvt-m-right-xxs\">{info}</span>\n              <span>Maintenance</span>\n            </li>\n            <li className=\"status-key__item status-key__item--good\">\n              <span className=\"rvt-alert--success rvt-m-right-xxs\">{checkmark}</span>\n              <span>Healthy</span>\n            </li>\n          </ul>\n        </div>\n        <Table margin={{top: \"md\"}} compact>\n          <thead>\n            <tr>\n              <th width=\"350\">Service category</th>\n              <th className=\"status-matrix__campus\">\n                <abbr title=\"Bloomington\">IUB</abbr>\n              </th>\n              <th className=\"status-matrix__campus\">\n                <abbr title=\"Indianapolis\">IUPUI</abbr>\n              </th>\n              <th className=\"status-matrix__campus\">\n                <abbr title=\"Columbus\">IUPUC</abbr>\n              </th>\n              <th className=\"status-matrix__campus\">\n                <abbr title=\"Richmond\">IUE</abbr>\n              </th>\n              <th className=\"status-matrix__campus\">\n                <abbr title=\"Fort Wayne\">IUFW</abbr>\n              </th>\n              <th className=\"status-matrix__campus\">\n                <abbr title=\"Kokomo\">IUK</abbr>\n              </th>\n              <th className=\"status-matrix__campus\">\n                <abbr title=\"Gary\">IUN</abbr>\n              </th>\n              <th className=\"status-matrix__campus\">\n                <abbr title=\"South Bend\">IUSB</abbr>\n              </th>\n              <th className=\"status-matrix__campus\">\n                <abbr title=\"New Albany\">IUS</abbr>\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            {this.state.groups.map((group) =>\n              <React.Fragment key={group.id}>\n                <tr className=\"status-matrix__header-row\">\n                  <td className=\"status-matrix__category\">\n                    <button onClick={()=>this.toggleGroup(group.id)} className=\"rvt-button--plain status-matrix__category-toggle js-toggle__trigger\">\n                      {group.expanded ? chevronDown : chevronRight}\n                      <span className=\"rvt-m-left-xs\">{group.name}</span>\n                    </button>\n                    <Link to={`/Rss?services=${this.getServiceIds(group)}`}\n                       target=\"_blank\"\n                       rel=\"noopener noreferrer\"\n                       className=\"status-matrix__category-rss\">\n                      {rss}\n                      <span className=\"rvt-sr-only\">RSS feed for {group.name}</span>\n                    </Link>\n                  </td>\n\n                  <td className=\"status-icon status-icon--good rvt-alert--success\">{checkmark}</td>\n                  <td className=\"status-icon status-icon--good rvt-alert--success\">{checkmark}</td>\n                  <td className=\"status-icon status-icon--good rvt-alert--info\">{info}</td>\n                  <td className=\"status-icon status-icon--good rvt-alert--success\">{checkmark}</td>\n                  <td className=\"status-icon status-icon--good rvt-alert--error\">{exclamation}</td>\n                  <td className=\"status-icon status-icon--good rvt-alert--warning\">{minus}</td>\n                  <td className=\"status-icon status-icon--good rvt-alert--success\">{checkmark}</td>\n                  <td className=\"status-icon status-icon--good rvt-alert--success\">{checkmark}</td>\n                  <td className=\"status-icon status-icon--good rvt-alert--success\">{checkmark}</td>\n                </tr>\n                {group.expanded && this.state.services.map((service) =>\n                  <React.Fragment key={service.id}>\n                    { this.isPartOfGroup(service, group) &&\n                      <tr className=\"status-matrix__sub-row js-toggle__target\">\n                        <td className=\"status-matrix__service\">\n                          <Link className=\"rvt-ts-xs rvt-m-left-lg status-matrix__service-title\" to={`/service/${service.id}`}>{service.name}</Link>\n                          <Link to={`/Rss?services=${service.id}`} target=\"_blank\" rel=\"noopener noreferrer\" className=\"status-matrix__service-rss\">\n                            {rss}\n                          </Link>\n                        </td>\n                        <td className=\"status-icon status-icon--good rvt-alert--success\">{checkmark}</td>\n                        <td className=\"status-icon status-icon--good rvt-alert--success\">{checkmark}</td>\n                        <td className=\"status-icon status-icon--good rvt-alert--info\">{info}</td>\n                        <td className=\"status-icon status-icon--good rvt-alert--success\">{checkmark}</td>\n                        <td className=\"status-icon status-icon--good rvt-alert--danger\">{exclamation}</td>\n                        <td className=\"status-icon status-icon--good rvt-alert--warning\">{minus}</td>\n                        <td className=\"status-icon status-icon--good rvt-alert--success\">{checkmark}</td>\n                        <td className=\"status-icon status-icon--good rvt-alert--success\">{checkmark}</td>\n                        <td className=\"status-icon status-icon--good rvt-alert--success\">{checkmark}</td>\n                      </tr>\n                    }\n                  </React.Fragment>\n                )}\n              </React.Fragment>\n            )}\n          </tbody>\n        </Table>\n      </React.Fragment>\n    );\n  }\n}\n\n\n","import React, { Component } from 'react';\nimport 'rivet-uits/css/rivet.css'\nimport './Notices.css'\nimport { Link } from 'react-router-dom';\nimport { Badge } from 'rivet-react'\n\n\nexport class Notices extends Component {\n  render() {\n    let props = this.props;\n    let title = props.title;\n    let notices = props.notices;\n    let type = props.type;\n\n    return (\n      <React.Fragment>\n        {!!notices.length &&\n          <div className={`message-box message-box--${type}`}>\n            <header className=\"message-box-header\">\n              <h2 className=\"message-box-header__message\">{title}</h2>\n              <div className=\"message-box-header__count\">{notices.length}</div>\n            </header>\n            <ul className=\"message-box__list\">\n              {notices && notices.map((notice) =>\n                <li className=\"message-box__list-item\" key={notice.id}>\n                  <div className=\"container kill-vertical\">\n                    <div className=\"unit four-fifths\">\n                      <Link to={`/notices/${notice.id}`}>{notice.name}</Link>\n                      {notice.services.length > 1 &&\n                        <div>\n                          <span className=\"rvt-ts-xs rvt-text-bold rvt-m-right-xs\">Affected services:</span>\n                          {notice.services.map((service) =>\n                            <Badge key={service.id} modifier=\"secondary\" typescale=\"xxs\" margin={{right:'xxs', top:'xs'}}>{service.name}</Badge>\n                          )}\n                        </div>\n                      }\n                    </div>\n                  </div>\n                </li>\n              )}\n            </ul>\n          </div>\n        }\n      </React.Fragment>\n    );\n  }\n}\n\n\n","import React, { Component } from 'react';\nimport 'rivet-uits/css/rivet.css'\nimport { notices } from '../status-api'\nimport {Container} from 'rivet-react'\nimport { Notices, StatusMatrix } from \"../components\";\n\nexport class Home extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      notices: [],\n      serviceGroups: []\n    };\n\n    this.filterNoticesByType = this.filterNoticesByType.bind(this)\n\n  }\n\n  componentDidMount() {\n    notices(this)\n  }\n\n  filterNoticesByType(type) {\n    let notices = this.state.notices\n    return notices.filter((notice) => {\n      return notice.noticeType === type\n    })\n  }\n\n  render() {\n    let filterNoticesByType = this.filterNoticesByType\n    let alertNotices = filterNoticesByType('Alert')\n    let maintenanceNotices = filterNoticesByType('Maintenance')\n    let informationNotices = filterNoticesByType('Information')\n    let ongoingNotices = filterNoticesByType('Ongoing')\n\n    return (\n      <Container margin={{tb: \"md\"}} width=\"senior\" center>\n        <Notices type='alert' notices={alertNotices} title=\"Alert notices\" />\n        <Notices type='maintenance' notices={maintenanceNotices} title=\"Maintenance notices\" />\n        <Notices type='information' notices={informationNotices} title=\"Information notices\" />\n        <Notices type='ongoing' notices={ongoingNotices} title=\"On-going notices\" />\n        <StatusMatrix hide=\"md-down\" />\n      </Container>\n    );\n  }\n}\n\n\n","import React, { Component } from 'react';\nimport 'rivet-uits/css/rivet.css'\nimport { Table } from 'rivet-react'\nimport { maintenanceWindows } from '../status-api'\n\nexport class Maintenance extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      maintenanceWindows: []\n    };\n  }\n\n  componentDidMount() {\n    maintenanceWindows(this)\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <h1 className=\"rvt-ts-41 rvt-text-bold\">Regularly scheduled maintenance windows</h1>\n        <Table margin={{top:'lg'}} variant=\"stripes\" compact>\n          <thead>\n          <tr>\n            <th>Service</th>\n            <th>Frequency</th>\n            <th>Day</th>\n            <th>Time</th>\n          </tr>\n          </thead>\n          <tbody>\n          {this.state.maintenanceWindows.map((maintenance) =>\n            <tr key={maintenance.id}>\n              <td>{maintenance.service.name}</td>\n              <td>{maintenance.frequency}</td>\n              <td>{maintenance.day}</td>\n              <td>{maintenance.time}</td>\n            </tr>\n          )}\n          </tbody>\n        </Table>\n      </React.Fragment>\n    );\n  }\n}\n\n\n","import React, { Component } from 'react';\nimport 'rivet-uits/css/rivet.css'\nimport { Badge, Row, Col, Panel } from 'rivet-react'\nimport {checkmark, exclamation, info, minus} from \"../icons\";\n\nexport class Notice extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      notice: {}\n    };\n  }\n\n  componentDidMount() {\n    let match = this.props.match\n    let params = match.params\n    let noticeId = params.noticeId\n\n    fetch(\"https://api.status-test.uits.iu.edu/Notices/\" + noticeId)\n      .then(res => res.json())\n      .then(\n        (result) => {\n          this.setState({\n            isLoaded: true,\n            notice: result\n          });\n        },\n        // Note: it's important to handle errors here\n        // instead of a catch() block so that we don't swallow\n        // exceptions from actual bugs in components.\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            error\n          });\n        }\n      )\n  }\n\n  render() {\n    let notice = this.state.notice\n\n    return (\n      <React.Fragment>\n        <Row>\n          <Col md={8}>\n            <h1 className=\"rvt-ts-41 rvt-text-bold\">{notice.name}</h1>\n            <div className=\"rvt-m-tb-md\">Affected services: {notice.services && notice.services.map(service =>\n              <Badge variant=\"info\" key={service.id}>{service.name}</Badge>\n            )}</div>\n            <p>{notice.content}</p>\n            <h2 className=\"rvt-text-bold rvt-m-top-lg\">Affected campuses</h2>\n            <div className=\"rvt-m-tb-sm status-matrix status-matrix--single\">\n              <table>\n                <thead>\n                <tr>\n                  <th className=\"status-matrix__campus\">IUB</th>\n                  <th className=\"status-matrix__campus\">IUPUI</th>\n                  <th className=\"status-matrix__campus\">IUPUC</th>\n                  <th className=\"status-matrix__campus\">IUE</th>\n                  <th className=\"status-matrix__campus\">IUFW</th>\n                  <th className=\"status-matrix__campus\">IUK</th>\n                  <th className=\"status-matrix__campus\">IUN</th>\n                  <th className=\"status-matrix__campus\">IUSB</th>\n                  <th className=\"status-matrix__campus\">IUS</th>\n                </tr>\n                </thead>\n                <tbody>\n                <tr>\n                  <td className=\"status-icon status-icon--good rvt-alert--success\">{checkmark}</td>\n                  <td className=\"status-icon status-icon--good rvt-alert--success\">{checkmark}</td>\n                  <td className=\"status-icon status-icon--good rvt-alert--info\">{info}</td>\n                  <td className=\"status-icon status-icon--good rvt-alert--success\">{checkmark}</td>\n                  <td className=\"status-icon status-icon--good rvt-alert--error\">{exclamation}</td>\n                  <td className=\"status-icon status-icon--good rvt-alert--warning\">{minus}</td>\n                  <td className=\"status-icon status-icon--good rvt-alert--success\">{checkmark}</td>\n                  <td className=\"status-icon status-icon--good rvt-alert--success\">{checkmark}</td>\n                  <td className=\"status-icon status-icon--good rvt-alert--success\">{checkmark}</td>\n                </tr>\n                </tbody>\n              </table>\n            </div>\n\n            <div className=\"status-key status-key--left\">\n              <ul className=\"status-key__list\">\n                <li className=\"status-key__item status-key__item--alert\">\n                  <span className=\"rvt-alert--danger rvt-m-right-xxs\">{exclamation}</span>\n                  <span>Alert</span>\n                </li>\n                <li className=\"status-key__item status-key__item--ongoing\">\n                  <span className=\"rvt-alert--warning rvt-m-right-xxs\">{minus}</span>\n                  <span>Ongoing issue</span>\n                </li>\n                <li className=\"status-key__item status-key__item--maintenance\">\n                  <span className=\"rvt-alert--info rvt-m-right-xxs\">{info}</span>\n                  <span>Maintenance</span>\n                </li>\n                <li className=\"status-key__item status-key__item--good\">\n                  <span className=\"rvt-alert--success rvt-m-right-xxs\">{checkmark}</span>\n                  <span>Healthy</span>\n                </li>\n              </ul>\n            </div>\n          </Col>\n          <Col md={4}>\n            <Panel>\n              <h2>Details</h2>\n              <ul className=\"rvt-plain-list\">\n                <li>\n                  <h3>ID No.</h3>\n                  <div>{notice.id}</div>\n                </li>\n                <li>\n                  <h3>Last status check</h3>\n                  <div>{notice.lastActivityOn}</div>\n                </li>\n                <li>\n                  <h3>Start date</h3>\n                  <div>{notice.changeStart || notice.publishedOn}</div>\n                </li>\n                <li>\n                  <h3>End date</h3>\n                  <div>{notice.changeEnd || \"Not set.\"}</div>\n                </li>\n              </ul>\n            </Panel>\n          </Col>\n        </Row>\n\n      </React.Fragment>\n    );\n  }\n}\n\n\n","import React, { Component } from 'react';\nimport 'rivet-uits/css/rivet.css'\nimport { Table } from 'rivet-react'\n\nexport class Notices extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      notices: []\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://api.status-test.uits.iu.edu/Notices\")\n      .then(res => res.json())\n      .then(\n        (result) => {\n          this.setState({\n            isLoaded: true,\n            notices: result\n          });\n        },\n        // Note: it's important to handle errors here\n        // instead of a catch() block so that we don't swallow\n        // exceptions from actual bugs in components.\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            error\n          });\n        }\n      )\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <Table variant=\"stripes\" cells>\n          <thead>\n          <tr>\n            <th>Greeting</th>\n            <th>Audience</th>\n          </tr>\n          </thead>\n          <tbody>\n          {this.state.notices.map((notice) =>\n            <tr key={notice.id}>\n              <td>{notice.name}</td>\n              <td>{notice.content}</td>\n            </tr>\n          )}\n          </tbody>\n        </Table>\n      </React.Fragment>\n    );\n  }\n}\n\n\n","import React from 'react';\nimport 'rivet-uits/css/rivet.css'\nimport {Container, Header, HeaderMenu, HeaderNavigation} from 'rivet-react'\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom'\nimport { Home, Calendar, Maintenance, Notice, Notices } from './pages'\nimport {info} from \"./icons\";\n\nconst App = () => (\n  <Router basename={process.env.PUBLIC_URL}>\n    <React.Fragment>\n      <Header title=\"Status.IU\">\n        <HeaderNavigation>\n          <HeaderMenu label=\"Information\">\n            <Link to=\"/notices/28\"><span className=\"rvt-m-right-xxs\">{info}</span> CAS and iuware have no end dates</Link>\n            <Link to=\"/notices/62\"><span className=\"rvt-m-right-xxs\">{info}</span> New Test Notice Title Update</Link>\n            <Link to=\"/notices/46055\"><span className=\"rvt-m-right-xxs\">{info}</span> Two Step for ALL</Link>\n          </HeaderMenu>\n          <Link to=\"/maintenance\">Maintenance</Link>\n          <Link to=\"/calendar\">Calender</Link>\n        </HeaderNavigation>\n\n      </Header>\n      <main id=\"main-content\">\n        <Container margin={{tb: \"md\"}} width=\"senior\" center>\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/notices\" component={Notices} />\n          <Route path=\"/notices/:noticeId\" component={Notice} />\n          <Route path=\"/calendar\" component={Calendar} />\n          <Route path=\"/maintenance\" component={Maintenance} />\n        </Container>\n      </main>\n    </React.Fragment>\n  </Router>\n)\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}